{"ast":null,"code":"var _jsxFileName = \"/home/programming/Documents/kriptografi_project/src/pages/atbash.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Atbash() {\n  _s();\n  const [abjad, setAbjad] = useState(\"abcdefghijklmnopqrstuvwxyz\");\n  // Ref Hooks\n  const plaintext = useRef();\n  const ciphertext = useRef();\n  const keyCiphertext = useRef();\n\n  // state\n  const [cipherState, setCipherState] = useState(null);\n  const [plainState, setPlainState] = useState(null);\n\n  // Button Action\n  const encrypt = () => {\n    const plain = plaintext.current.value;\n    if (plain !== \"\") {\n      runEncrypt(plain, \"encrypt\");\n    } else {\n      alert(\"nda boleh kosong\");\n    }\n  };\n  const decrypt = () => {\n    const cipher = ciphertext.current.value;\n    if (cipher !== \"\") {\n      runEncrypt(cipher, \"decrypt\");\n    } else {\n      alert(\"nda boleh kosong\");\n    }\n  };\n\n  // function\n  const runEncrypt = (plaintext, reqState) => {\n    const subPlainText = plaintext.split(\" \");\n    let cipherArray = [];\n    subPlainText.forEach(karakter => {\n      let text = \"\";\n      for (let index = 0; index < karakter.length; index++) {\n        const element = karakter[index];\n        const indexElement = parseInt(abjad.indexOf(element)) * -1;\n        const cipherIndex = (indexElement + 25) % 26;\n        text += abjad[cipherIndex];\n      }\n      cipherArray.push(text);\n      let outputStream = cipherArray.toString().replaceAll(\",\", \" \");\n      if (reqState == \"encrypt\") {\n        setCipherState(outputStream);\n      } else {\n        setPlainState(outputStream);\n      }\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"bg-gradient-to-r from-slate-400 to-blue-800 w-full h-screen text-white\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-center font-bold text-3xl py-4\",\n      children: \"Atbash Cipher (ReactJs)\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex flex-row justify-items-center mt-12\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex-1 mx-8\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"block text-sm font-medium\",\n            children: \"Plain Text\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n            ref: plaintext,\n            placeholder: \"Input your plaintext ....\",\n            className: \"w-full h-64 mt-2 p-2 border text-slate-900 border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-indigo-500 focus:border-indigo-500\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mt-4\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => encrypt(),\n            className: \"w-full bg-indigo-500 hover:bg-indigo-700 text-white font-bold py-2 px-4 rounded\",\n            children: \"Encrypt\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mt-4\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Cipher text :\", \" \", cipherState == null ? \"\" : /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"bg-slate-500 px-1\",\n              children: cipherState\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex-1 mx-8\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"block text-sm font-medium\",\n            children: \"Cipher Text\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n            ref: ciphertext,\n            placeholder: \"Input your cipher text ....\",\n            className: \"w-full h-64 mt-2 p-2 border text-slate-900 border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-indigo-500 focus:border-indigo-500\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mt-4\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => decrypt(),\n            className: \"w-full bg-indigo-500 hover:bg-indigo-700 text-white font-bold py-2 px-4 rounded\",\n            children: \"Decrypt\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mt-4\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Plain text :\", \" \", plainState == null ? \"\" : /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"bg-slate-500 px-1\",\n              children: plainState\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 112,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n}\n_s(Atbash, \"9SfQr481ut/ETvivfezvv0x+Akg=\");\n_c = Atbash;\nvar _c;\n$RefreshReg$(_c, \"Atbash\");","map":{"version":3,"names":["React","useState","useRef","Atbash","abjad","setAbjad","plaintext","ciphertext","keyCiphertext","cipherState","setCipherState","plainState","setPlainState","encrypt","plain","current","value","runEncrypt","alert","decrypt","cipher","reqState","subPlainText","split","cipherArray","forEach","karakter","text","index","length","element","indexElement","parseInt","indexOf","cipherIndex","push","outputStream","toString","replaceAll"],"sources":["/home/programming/Documents/kriptografi_project/src/pages/atbash.js"],"sourcesContent":["import React, { useState, useRef } from \"react\";\n\nexport default function Atbash() {\n  const [abjad, setAbjad] = useState(\"abcdefghijklmnopqrstuvwxyz\");\n  // Ref Hooks\n  const plaintext = useRef();\n  const ciphertext = useRef();\n  const keyCiphertext = useRef();\n\n  // state\n  const [cipherState, setCipherState] = useState(null);\n  const [plainState, setPlainState] = useState(null);\n\n  // Button Action\n  const encrypt = () => {\n    const plain = plaintext.current.value;\n    if (plain !== \"\") {\n      runEncrypt(plain, \"encrypt\");\n    } else {\n      alert(\"nda boleh kosong\");\n    }\n  };\n\n  const decrypt = () => {\n    const cipher = ciphertext.current.value;\n    if (cipher !== \"\") {\n      runEncrypt(cipher, \"decrypt\");\n    } else {\n      alert(\"nda boleh kosong\");\n    }\n  };\n\n  // function\n  const runEncrypt = (plaintext, reqState) => {\n    const subPlainText = plaintext.split(\" \");\n    let cipherArray = [];\n    subPlainText.forEach((karakter) => {\n      let text = \"\";\n      for (let index = 0; index < karakter.length; index++) {\n        const element = karakter[index];\n        const indexElement = parseInt(abjad.indexOf(element)) * -1;\n        const cipherIndex = (indexElement + 25) % 26;\n        text += abjad[cipherIndex];\n      }\n      cipherArray.push(text);\n      let outputStream = cipherArray.toString().replaceAll(\",\", \" \");\n      if (reqState == \"encrypt\") {\n        setCipherState(outputStream);\n      } else {\n        setPlainState(outputStream);\n      }\n    });\n  };\n\n  return (\n    <div className='bg-gradient-to-r from-slate-400 to-blue-800 w-full h-screen text-white'>\n      <h1 className='text-center font-bold text-3xl py-4'>\n        Atbash Cipher (ReactJs)\n      </h1>\n      <div className='flex flex-row justify-items-center mt-12'>\n        <div className='flex-1 mx-8'>\n          <div>\n            <label className='block text-sm font-medium'>Plain Text</label>\n            <textarea\n              ref={plaintext}\n              placeholder='Input your plaintext ....'\n              className='w-full h-64 mt-2 p-2 border text-slate-900 border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-indigo-500 focus:border-indigo-500'\n            />\n          </div>\n          <div className='mt-4'>\n            <button\n              onClick={() => encrypt()}\n              className='w-full bg-indigo-500 hover:bg-indigo-700 text-white font-bold py-2 px-4 rounded'\n            >\n              Encrypt\n            </button>\n          </div>\n          <div className='mt-4'>\n            <p>\n              Cipher text :{\" \"}\n              {cipherState == null ? (\n                \"\"\n              ) : (\n                <span className='bg-slate-500 px-1'>{cipherState}</span>\n              )}\n            </p>\n          </div>\n        </div>\n        <div className='flex-1 mx-8'>\n          <div>\n            <label className='block text-sm font-medium'>Cipher Text</label>\n            <textarea\n              ref={ciphertext}\n              placeholder='Input your cipher text ....'\n              className='w-full h-64 mt-2 p-2 border text-slate-900 border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-indigo-500 focus:border-indigo-500'\n            />\n          </div>\n          <div className='mt-4'>\n            <button\n              onClick={() => decrypt()}\n              className='w-full bg-indigo-500 hover:bg-indigo-700 text-white font-bold py-2 px-4 rounded'\n            >\n              Decrypt\n            </button>\n          </div>\n          <div className='mt-4'>\n            <p>\n              Plain text :{\" \"}\n              {plainState == null ? (\n                \"\"\n              ) : (\n                <span className='bg-slate-500 px-1'>{plainState}</span>\n              )}\n            </p>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}